.ReactModal__Body--open {
  overflow: hidden;
}

.ReactModalPortal > * {
  // When the modal is closed, overlay div has no css class
  // This selector should be overridden by the `&--after-open` class below
  opacity: 0;
}

.ReactModalPortal > .ReactModal__Overlay {
  transition: opacity 200ms ease-in-out;

  &--after-open {
    opacity: 1;
  }

  &--before-close {
    opacity: 0;
  }
}

.modal-overlay {
  background-color: lead-color-alpha('foreground', 'dark');
  bottom: 0;
  left: 0;
  overflow: auto;
  padding: 0 1rem;
  position: fixed;
  right: 0;
  text-align: center;
  top: 0;
  z-index: $z-index-10;

  @media only screen and (min-width: $screen-size-lg * .625) {
    padding: 0 3rem;

    &::before {
      content: '';
      display: inline-block;
      height: 50%;
    }
  }
}

.modal {
  background-color: lead-color('menu');
  border: .1rem solid lead-color-level('menu', -2);
  border-radius: $border-radius;
  display: inline-block;
  margin-bottom: 3rem;
  margin-top: 3rem;
  max-width: 70rem;
  outline: none;
  overflow: auto;
  padding: 2rem 3rem;
  text-align: left;
  vertical-align: middle;

  &.modal-normal {
    max-width: 70rem;
  }

  &.modal-narrow {
    max-width: 50rem;
  }

  h1 {
    color: lead-color-level('foreground', 3);
    font-size: 2.7rem;
    font-weight: 400;
    line-height: 3.7rem;
    margin-bottom: .5rem;
  }

  @media only screen and (min-width: $screen-size-lg * .625) {
    padding: 5rem 6rem;

    &.modal-narrow {
      width: 50rem;
    }

    &.modal-normal {
      width: 70rem;
    }

    h1 {
      margin-bottom: 0;
    }
  }

  p {
    color: lead-color-level('foreground', 5);
    font-size: 1.5rem;
    margin-bottom: 2rem;
  }

  .modal-buttons {
    margin-top: 3rem;
    text-align: right;

    .button {
      &:last-child {
        margin-right: 0;
      }
    }
  }
}
